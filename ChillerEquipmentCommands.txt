#          Command list for ChillerCtrl.py
#
#  This file contains the list of commands for the equipment used in the thermo
#  evaluaion of ATLAS staves.
#
#  The commands are grouped according to each device used in the evaluations.
#  Some commands require a parameter.  The parameter is entered after the command.
#
#  [name]  - Name of device (or section) the following commands apply.
#          - SAME name should be used in this config and other config files.
#          -   Whitespace is considered as part of the name
#          -   to be consistent no whitespace should be used in section names!
#  Format: u : d #c
#           u = user command text.  ex: Setpoint
#           d = device specific command for action desired by user command.  ex: SP?
#           c = comment about what command does.
#  Notice: 
#          - for commands followed by a value: e.g. Chiller's "ChangeSetpoint"
#            one should use: ChangeSetpoint=20 or ChangeSetpoint=-30


# *** short name for each device facilitating fetching devices commands ***
# *** user type: cStop, meaning Stop under Chiller section              ***
[ShortName]
c : Chiller
i : Pump
h : Humidity
t : Thermocouple 
a : Arduino

#  *** Commands for the SP Scientific RC211B0 recirculating chiller. ***
[Chiller] 
Start : START          # Turn on the chiller.
Stop : STOP            # Turn off the chiller.
SetDegrees : DEGREES   # Set the temperature scale. 0=Celsius, 1=Fahrenheith, 2=Kelvin
Setpoint? : SP?        # Query the temperature setpoint in degrees.
ChangeSetpoint : SP=   # Set the temperature setpoint in degrees. Usage:ChangeSetpoint=-20
AlarmStat? : ALMCODE?  # Values in system alarm table.
AlarmClr : CLRALARM    # Clear all the alarm conditions.
SetAlarmHi : ALARMH    # Set the alarm oertemp value.
SetAlarmLo : ALARML    # Set the alarm undertemp value.
CoolCycle? : CCT?      # Query the Cool Cycle Time. Units in seconds.
SetCoolCycle : CCT=    # Set the Cool Cycle Time. Units in seconds.
CoolPropBand? : CPB?   # Query the proportioning band about the setpoint in degrees.
SetCoolPropBand : CPB= # Set the proportioning band about the setpoint in degrees.
DeadBand? : DB?        # Query the deadband between heat & cool proportioning bands.
SetDeadBand : DB=      # Set the deadband between heat & cool proportioning bands in degrees.
HeatPropBand? : HPB?   # Query the heat band width about the setpoint.
SetHeatPropBand : HPB= # Set the heat band width about the setpoint.
DerivTime? : DT?       # Query the derivative time constant applied to proportioning band.
SetDerivTime : DT=     # Set the derivative time constant applied to proportioning band.
IntegTime? : IT?       # Query the integral time constant applied to proportioning band.
SetIntegTime : IT=     # Set the integral time constant applied to proportioning band.
TransRate? : RR?       # Query the set poin transition rate in degrees/second.
SetTransRate : RR=     # Set the set poin transition rate in degrees/second.
Poll : POLL            # A noop command to test communications interface.
PumpStat? : PUMP?      # Query the status of the circulating pump. 0=off, 1=on
RefrigStat? : REFRSW?  # Query the status of the refrigeration unit. 0=off, 1=on
SetRefrig : REFRSW=    # Set the state of the refrigeration unit.
Fluid? : FLUID?        # Query the defined fluid type. 
SetFluidHi : FSPANH    # Set the high temperature limit for fluid type.
SetFluidLo : FSPANL    # Set the low temperature limit for fluid type.
GetResTemp? : PTLOC?   # Reads the fluid temperature in the reservoir?

#  *** Commands for the booster pump ESV751N02YXC inverter (via ESVZAR0 RS-485 module.) ***
#   Note the commands are Hex values, not text.  Every command must end with the correct
#   two byte Cyclic Redundancy Check (CRC) value. 
# Roy: correct below??
# ??? RPM : 0106002D00                   # Set the RPM of the booster pump. e.g.:0106002D00xxyyyy  xx=RPM, yyyy=CRC value. Need "RPM=<VAL>"
# 
[Pump]
UnlockDrive : 01060030000089C5     # Unlock Start, Stop button. Do once everytime after power on the pump
UnlockParameter : 010600310000D805 # Unlock parameter button. Do once if need to change RPM
LockDrive : 01060001000259CB       # Lock Start, Stop button.
Start : 010600010008D9CC           # Start the booster pump.
Stop : 010600010004D9C9            # Stop the booster pump.
RPS? : 010300190001EE58            # Check the current RPM
RPS : 0106002C                     # Set the RPM of the booster pump:
Status? : 010300170001340E         # Check if the pump is on

# example: 0106002Crrrryyzz  (rrrr = RPM value*10 (max = 0x445C), zzyy = CRC
# value, then swap the first and last two digits)
# to set RPM = 10
# 10 * 10 = 100 = 0x64
# use "0106002C0064" to calcualte the crc value, which is E849
# swap the two digits into 49E8
# the final command should be: 0106002C006449E8


#  *** Commands for the Omega HH314A humidity meter. ***
[Humidity]
Read : A  # Read humidity sensor.


#  *** Commands for the Omega HH147U temperature logger meter. ***
[Thermocouple]
Read : AAB40110AB  # Read the four thermocouple sensors.

[Arduino]
RPS? : F      # Reads RPM voltage
Toggle : V    # Toggles the valve states
Status : S    # Checks status of the actuator valves

